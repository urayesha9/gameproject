SVG Tutorial
-------------

1.(i).SVG stands for Scalable Vector Graphics.SVG defines vector-based graphics in XML(extensible markup language) format.
2.(ii)
    SVG images can be created and edited with any text editor
    SVG images can be searched, indexed, scripted, and compressed
    SVG images are scalable
    SVG images can be printed with high quality at any resolution
    SVG images are zoomable
    SVG graphics do NOT lose any quality if they are zoomed or resized
    SVG is an open standard
    SVG files are pure XML
 3.(iii).SVG image begins with an <svg> element.The width and height attributes of the <svg> element define the width and height of the SVG image.The <circle> element is used to draw a circle
The cx and cy attributes define the x and y coordinates of the center of the circle. If cx and cy are not set, the circle's center is set to (0, 0)
The r attribute defines the radius of the circle
The stroke and stroke-width attributes control how the outline of a shape appears. We set the outline of the circle to a 4px green "border"
The fill attribute refers to the color inside the circle. We set the fill color to yellow
The closing </svg> tag closes the SVG image.


4.(iv) SVG path : The <path> element is used to define a path.
The following commands are available for path data:

    M = moveto
    L = lineto
    H = horizontal lineto
    V = vertical lineto
    C = curveto
    S = smooth curveto
    Q = quadratic Bézier curve
    T = smooth quadratic Bézier curveto
    A = elliptical Arc
    Z = closepath
Note: All of the commands above can also be expressed with lower letters. Capital letters means absolutely positioned, lower cases means relatively positioned.

example: <svg height="210" width="400">
  <path d="M150 0 L75 200 L225 200 Z" />
 
</svg>


5.(v)SVG <text>
example:  <svg height="30" width="200">
  <text x="0" y="15" fill="red">I love SVG!</text>
</svg> .
transform="rotate(30 20,40)
6.(vi)SVG offers a wide range of stroke properties
example:  <svg height="80" width="300">
  <g fill="none">
    <path stroke="red" d="M5 20 l215 0" />
    <path stroke="black" d="M5 40 l215 0" />
    <path stroke="blue" d="M5 60 l215 0" />
  </g>
</svg> 
7.(vii) a touch of the filter effects that are possible - and give you an idea of what can be done with SVG.

The available filter elements in SVG are:

    <feBlend> - filter for combining images
    <feColorMatrix> - filter for color transforms
    <feComponentTransfer>
    <feComposite>
    <feConvolveMatrix>
    <feDiffuseLighting>
    <feDisplacementMap>
    <feFlood>
    <feGaussianBlur>
    <feImage>
    <feMerge>
    <feMorphology>
    <feOffset> - filter for drop shadows
    <feSpecularLighting>
    <feTile>
    <feTurbulence>
    <feDistantLight> - filter for lighting
    <fePointLight> - filter for lighting
    <feSpotLight> - filter for lighting

8.(viii)SVG Blur Effects:- The <defs> element is short for definitions and contains definition of special elements (such as filters).

The <filter> element is used to define an SVG filter. The <filter> element has a required id attribute which identifies the filter. The graphic then points to the filter to use.

1.SVG <feGaussianBlur>.
example:-  <svg height="110" width="110">
  <defs>
    <filter id="f1" x="0" y="0">
      <feGaussianBlur in="SourceGraphic" stdDeviation="15" />
    </filter>
  </defs>
  <rect width="90" height="90" stroke="green" stroke-width="3"
  fill="yellow" filter="url(#f1)" />
</svg> 

(i).The id attribute of the <filter> element defines a unique name for the filter.
(ii).The blur effect is defined with the <feGaussianBlur> element.
(iii).The in="SourceGraphic" part defines that the effect is created for the entire element
(iv).The stdDeviation attribute defines the amount of the blur.
(v).The filter attribute of the <rect> element links the element to the "f1" filter

9.SVG <feOffset>:- 1.The <feOffset> element is used to create drop shadow effects. The idea is to take an SVG graphic (image or element) and move it a little bit in the xy plane.

svg height="120" width="120">
  <defs>
    <filter id="f1" x="0" y="0" width="200%" height="200%">
      <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
      <feBlend in="SourceGraphic" in2="offOut" mode="normal" />
    </filter>
  </defs>
  <rect width="90" height="90" stroke="green" stroke-width="3"
  fill="yellow" filter="url(#f1)" />
</svg>

(i)The id attribute of the <filter> element defines a unique name for the filter
    The filter attribute of the <rect> element links the element to the "f1" filter
2.the offset image can be blurred (with <feGaussianBlur>):
 <svg height="140" width="140">
  <defs>
    <filter id="f2" x="0" y="0" width="200%" height="200%">
      <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
      <feGaussianBlur result="blurOut" in="offOut" stdDeviation="10" />
      <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
    </filter>
  </defs>
  <rect width="90" height="90" stroke="green" stroke-width="3"
  fill="yellow" filter="url(#f2)" />
</svg> 
(i)The stdDeviation attribute of the <feGaussianBlur> element defines the amount of the blur.
3.make the shadow black.
ex:-  <svg height="140" width="140">
  <defs>
    <filter id="f3" x="0" y="0" width="200%" height="200%">
      <feOffset result="offOut" in="SourceAlpha" dx="20" dy="20" />
      <feGaussianBlur result="blurOut" in="offOut" stdDeviation="10" />
      <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
    </filter>
  </defs>
  <rect width="90" height="90" stroke="green" stroke-width="3"
  fill="yellow" filter="url(#f3)" />
</svg> 
(i).The in attribute of the <feOffset> element is changed to "SourceAlpha" which uses the Alpha channel for the blur instead of the entire RGBA pixel.

4.treat the shadow as a color.
 <svg height="140" width="140">
  <defs>
    <filter id="f4" x="0" y="0" width="200%" height="200%">
      <feOffset result="offOut" in="SourceGraphic" dx="20" dy="20" />
      <feColorMatrix result="matrixOut" in="offOut" type="matrix"
      values="0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0" />
      <feGaussianBlur result="blurOut" in="matrixOut" stdDeviation="10" />
      <feBlend in="SourceGraphic" in2="blurOut" mode="normal" />
    </filter>
  </defs>
  <rect width="90" height="90" stroke="green" stroke-width="3"
  fill="yellow" filter="url(#f4)" />
</svg> 

(i)The <feColorMatrix> filter is used to transform the colors in the offset image closer to black. The three values of '0.2' in the matrix all get multiplied by the red, green and blue channels. Reducing their values brings the colors closer to black (black is 0).

10.SVG Gradients

A gradient is a smooth transition from one color to another. In addition, several color transitions can be applied to the same element.There are two main types of gradients in SVG:

    Linear
    Radial
The <linearGradient> element is used to define a linear gradient.

The <linearGradient> element must be nested within a <defs> tag. The <defs> tag is short for definitions and contains definition of special elements (such as gradients).

Linear gradients can be defined as horizontal, vertical or angular gradients:

    Horizontal gradients are created when y1 and y2 are equal and x1 and x2 differ
    Vertical gradients are created when x1 and x2 are equal and y1 and y2 differ
    Angular gradients are created when x1 and x2 differ and y1 and y2 differ

    ex:-  <svg height="150" width="400">
  <defs>
    <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:rgb(255,255,0);stop-opacity:1" />
      <stop offset="100%" style="stop-color:rgb(255,0,0);stop-opacity:1" />
    </linearGradient>
  </defs>
  <ellipse cx="200" cy="70" rx="85" ry="55" fill="url(#grad1)" />
</svg> 
code exaplanation.
(i)
    The id attribute of the <linearGradient> tag defines a unique name for the gradient
    The x1, x2, y1,y2 attributes of the <linearGradient> tag define the start and end position of the gradient
    The color range for a gradient can be composed of two or more colors. Each color is specified with a <stop> tag. The offset attribute is used to define where the gradient color begin and end
    The fill attribute links the ellipse element to the gradient.

  11.SVG Radial Gradient - <radialGradient>

The <radialGradient> element is used to define a radial gradient.

The <radialGradient> element must be nested within a <defs> tag. The <defs> tag is short for definitions and contains definition of special elements (such as gradients).
example:  <svg height="150" width="500">
  <defs>
    <radialGradient id="grad1" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">
      <stop offset="0%" style="stop-color:rgb(255,255,255);
      stop-opacity:0" />
      <stop offset="100%" style="stop-color:rgb(0,0,255);stop-opacity:1" />
    </radialGradient>
  </defs>
  <ellipse cx="200" cy="70" rx="85" ry="55" fill="url(#grad1)" />
</svg> 

Code explanation:

    The id attribute of the <radialGradient> tag defines a unique name for the gradient
    The cx, cy and r attributes define the outermost circle and the fx and fy define the innermost circle
    The color range for a gradient can be composed of two or more colors. Each color is specified with a <stop> tag. The offset attribute is used to define where the gradient color begin and end
    The fill attribute links the ellipse element to the gradient.

12.The HTML <canvas> element is used to draw graphics on a web page.
 The graphic above is created with <canvas>.

 It shows four elements: a red rectangle, a gradient rectangle, a multicolor rectangle, and a multicolor text.